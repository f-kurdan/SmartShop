// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String   @<PASSWORD>
  role      Role     @default(USER)
}

model UserAdress {
  id Int      @id @default(autoincrement())
  user User     @relation(fields: [userId], references: [id])
  userId Int
  adressLine  String
  city String
  postalCode Int
  country String
}

enum Role {
  USER
  ADMIN
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  SKU       String
  price     Int
  image    Image[]
  brandId   Int
  brand     Brand  @relation(fields: [brandId], references: [id])
  category  Category  @relation(fields: [categoryId], references: [id])
  categoryId Int 
  productInfo ProductInfo[]
  productInventory ProductInventory @relation(fields: [productInventoryId], references: [id])
  productInventoryId Int
}

model Image {
  id Int      @id @default(autoincrement())
  url String
  product Product @relation(fields: [productId], references: [id])
  productId Int
}

model ProductInventory {
  id        Int      @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model ProductInfo {
  id Int      @id @default(autoincrement())
  name:       String,
  description: String,
  productId  Int
  product Product @relation(fields: [productId], references: [id])
}

model Order {
  id        Int      @id @default(autoincrement())  
  user  User @relation(fields: [userId], references: [id])
  userId Int
  orderDate DateTime @default(now())
  paymentMethod PaymentMethod 
  shippingAdress String
  shippingMethod ShippingMehtod
  orderTotal  Int
  orderStatus Strings
}

enum ShippingMehtod {
  PICKUP
  DELIVERY
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  product Product @relation(fields: [productId], references: [id])
  productId Int
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  price Int
}

model Category {
  id        Int      @id @default(autoincrement())
  name String

}

model Brand {
  id        Int      @id @default(autoincrement())
  name String

}


